networks:
  my-network:
    driver: bridge

services:
  flask-app:
    build: .
    container_name: flask-app
    networks:
      - my-network
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=mydatabase
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 20s
      retries: 5
    volumes:
      - ./redis:/data
    networks:
      - my-network

  db:
    image: mysql:latest
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_HOST: db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my-network

  test:
    build: .
    command: python test_app.py

volumes:
  mysql_data:
  redis: